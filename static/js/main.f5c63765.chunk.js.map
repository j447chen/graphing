{"version":3,"sources":["utilities/dimensionCalculator.js","components/Graph.js","components/GraphInput.js","components/ChartButtons.js","components/HistoryEntries.js","components/History.js","utilities/historyHeightCalculator.js","App.js","serviceWorker.js","index.js"],"names":["dimensionCalculator","windowWidth","window","innerWidth","windowHeight","innerHeight","height","width","d3","functionPlot","require","graph","Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initializeChart","bind","assertThisInitialized","graphToDisplay","console","log","compareOn","data","compareIds","map","obj","fn","mathFunc","axis","minX","maxX","minY","maxY","selectedId","firstObj","historyList","newProps","graphObj","draw","arguments","length","undefined","el","ReactDOM","findDOMNode","refs","myChart","target","yAxis","domain","xAxis","tip","renderer","grid","font","react_default","a","createElement","className","ref","Component","GraphInput","handleInvalidInterval","name","event","preventDefault","value","state","setState","minXError","maxXError","minYError","maxYError","handleLabel","changeTo","axisFocus","mathFunction","maxYErrror","handleClick","handleFunc","getMinMax","updateList","min","max","displayAxis","class","onClick","onChange","type","placeholder","id","Form","ChartButtons","HistoryEntries","handleDeleteEntry","handleDelete","History","myDiv","React","createRef","current","offsetHeight","_this2","displayList","src_components_HistoryEntries","Fragment","style","historyHeight","overflow","lib_default","dataLength","scrollableTarget","PureComponent","historyHeightCalculator","initalHeight","currentHeight","heightWindow","shortid","App","initialScreenWidth","updateDimensions","changeSelectedId","addEventListener","objWithid","objectSpread","generate","concat","toConsumableArray","_this3","newList","filter","item","removeEventListener","src_components_Graph","classname","src_components_ChartButtons","src_components_GraphInput","src_components_History","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5c63765.chunk.js","sourcesContent":["let dimensionCalculator = () => {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n\n    if(windowWidth > 930){\n        return {\n            height: (windowHeight - (4*16) - (2*10)) * 0.88,\n            width: ((windowWidth - (2*16) - (3*10))* 3/4)*0.95,\n        };\n    }\n    else if (windowWidth >= 768 && windowWidth <= 930){\n        return {\n            height: (windowHeight - (4*16) - (2*10)) * 0.88,\n            width: ((windowWidth - (2*16) - (3*10))* 3/4)*0.85,\n        };\n    }\n    return {\n        height: (windowHeight - (4*16) - (2*10)) * 0.45 ,\n        width: ((windowWidth - (2*16) - (3*10)))* 0.95,\n    }\n}\n\nexport default dimensionCalculator;\n","import d3 from \"d3\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport './Graph.css'\nimport dimensionCalculator from './../utilities/dimensionCalculator'\nwindow.d3 = d3;\n\n\nconst functionPlot = require(\"function-plot\");\nlet graph = null;\n\nclass Graph extends Component {\n    constructor(props){\n        super(props);\n        this.initializeChart = this.initializeChart.bind(this);\n        this.graphToDisplay = this.graphToDisplay.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(\"initalizeChart\")\n        this.initializeChart(600,600);\n        this.initializeChart(dimensionCalculator().width,dimensionCalculator().height);\n    }\n    // ((window.innerWidth - (2*16) - (3*10))*2/3)*0.90\n    //                 <Graph historyList={this.state.historyList} compareIds={this.state.compareIds}\n    // compareOn={this.state.compareOn} selectedId={this.state.selectedId}></Graph>\n    \n    graphToDisplay(){\n        if (this.props.compareOn){\n            const newData = this.props.compareIds.map((obj) => ({fn:obj.mathFunc}));\n            return ({\n                data: newData,\n                axis: {minX: -200, maxX: 200, minY: -200, maxY: 200}\n            })\n        }\n        if (this.props.selectedId !== null){\n            const obj = this.props.selectedId;\n            return ({\n                data: [{fn: obj.mathFunc}],\n                axis: {minX: obj.minX, maxX: obj.maxX, minY: obj.minY, maxY: obj.maxY},\n            })\n        }\n        const firstObj = this.props.historyList[0];\n        return ({\n            data: [{fn: firstObj.mathFunc}],\n            axis: {minX: firstObj.minX, maxX: firstObj.maxX, minY: firstObj.minY, maxY: firstObj.maxY},\n        })\n    }\n\n    componentWillReceiveProps(newProps){\n        console.log(newProps)\n        console.log('received props');\n        // if (this.props.selectedId !== newProps.selectedId || this.props.compareOn != newProps.compareOn || this.props.historyList.length != this.props.historyList.length \n        //     || this.props.historyList[0] != newProps.historyList[0]){\n            const graphObj = this.graphToDisplay();\n            this.initializeChart(newProps.width, newProps.height, graphObj);\n            graph.draw();\n        \n    }\n    \n    initializeChart(width, height, graphObj={data: [{fn: \"x^3\"}], axis: {minX: \"-50\", maxX: \"50\", minY:\"-50\", maxY:\"50\"}}){\n    // if (graphObj === null){return;}\n\n    let el = ReactDOM.findDOMNode(this.refs.myChart)\n    console.log(el);\n    graph = functionPlot({\n      target: el,\n      width: width,\n      height: height,\n      yAxis: { domain: [graphObj.axis.minY, graphObj.axis.maxY] },\n      xAxis: {domain: [graphObj.axis.minX,graphObj.axis.maxX]},\n      tip: {\n        renderer: function() {}\n      },\n      grid: true,\n      font: 12,\n      data: graphObj.data,\n    })\n  }\n    render(){\n        return (\n            <div className='graph' ref=\"myChart\" > </div>\n        )\n    }\n}\n\nexport default Graph;","import React, {\n    Component\n} from 'react';\nimport {\n    Form,\n} from 'semantic-ui-react'\nimport './GraphInput.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass GraphInput extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            mathFunction: \"\",\n            minX: -50, //default values\n            maxX: 50,\n            minY: -100,\n            maxY: 100,\n            axisFocus: \"X\",\n            minXError: false,\n            maxXError: false,\n            minYError: false,\n            maxYErrror: false,\n        }\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleFunc = this.handleFunc.bind(this);\n        this.handleInvalidInterval = this.handleInvalidInterval.bind(this);\n        this.handleLabel = this.handleLabel.bind(this);\n        this.getMinMax = this.getMinMax.bind(this);\n    }\n  //obj = {mathFunc: \"\", minX: \"\", maxX: \"\", minY: \"\", maxY: \"\", id: \"\"}\n    handleClick(event) {\n        event.preventDefault();\n        console.log('submit click');\n        this.props.updateList({mathFunc: this.state.mathFunction, minX: this.state.minX, maxX: this.state.maxX, minY: this.state.minY, maxY: this.state.maxY});\n    }\n\n    handleFunc(event) {\n        event.preventDefault();\n        this.setState({\n            mathFunction: event.target.value,\n        });\n    }\n\n    handleInvalidInterval = name => event => {\n        event.preventDefault();\n        // this.setState({\n        //     [name]: event.target.value,\n        // })\n        switch (name){\n            case \"minX\":\n                if (event.target.value >= this.state.maxX){\n                    this.setState({\n                        minXError: true,\n                    })\n                    return;\n                }\n                this.setState({\n                    minX: event.target.value,\n                    minXError:false,\n                })\n            case \"maxX\":\n                if (event.target.value <= this.state.minX){\n                    this.setState({\n                        maxXError:true,\n                    })\n                    return;\n                }\n                this.setState({\n                    maxX: event.target.value,\n                    maxXError:false,\n                })\n            case \"minY\":\n                if (event.target.value >= this.state.maxY){\n                    this.setState({\n                        minYError: true,\n                    })\n                    return;\n                }\n                this.setState({\n                    minY: event.target.value,\n                    minYError: false,\n                })\n            case \"maxY\":\n                if(event.target.value <= this.state.minY){\n                    this.setState({\n                        maxYError: true,\n                    })\n                    return;\n                }\n                this.setState({\n                    maxY: event.target.value,\n                    maxYError: false,\n                })\n        }\n    }\n\n    handleLabel = (changeTo) => event => {\n        event.preventDefault();\n        // this.setState({\n        //     [name]: event.target.value,\n        // })\n        this.setState((state, props) => ({\n            axisFocus: changeTo,\n        }));\n    }\n\n    getMinMax(axisFocus=\"X\"){\n        console.log(\"getminmax called\");\n        switch(axisFocus){\n            case \"X\": \n                return ({\n                    min: this.state.minX,\n                    max: this.state.maxX,\n                })\n            case \"Y\": \n                return ({\n                    min: this.state.minY,\n                    max: this.state.maxY,\n                })\n            default:\n                return ({\n                    min: this.state.minX,\n                    max: this.state.maxX,\n                })\n        }\n    }\n    render() {\n        const displayAxis = this.state.axisFocus === \"X\" ? (\n                                <div class=\"field\">\n                                <label>\n                                    <label class=\"ui label gray\" onClick={this.handleLabel(\"X\")}> X-Axis </label>\n                                    <label onClick={this.handleLabel(\"Y\")}> Y-Axis </label>\n                                </label>\n                            <div class = \"two fields\">\n                                <div class=\"field\">\n                                    <div class = \"ui labeled input\">\n                                        <div class = \"ui basic label\">\n                                        [\n                                        </div>\n                                        <input class=\"red\" onChange={this.handleInvalidInterval(\"minX\")} type=\"text\" placeholder={this.state.minX} id=\"minX\"\n                                            value={this.state.minX}></input>\n                                    </div>\n                                </div>\n                                ,\n                                <div class = \"field\">\n                                    <div class = \"ui labeled right input\">\n                                        <input onChange={this.handleInvalidInterval(\"maxX\")} type=\"text\" placeholder={this.state.maxX} id=\"maxX\"\n                                            value={this.state.maxX}></input>\n                                        <div class = \"ui basic label\">\n                                        ]\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        ) :\n                        <div class=\"field\">\n                        <label>\n                            <label onClick={this.handleLabel(\"X\")}> X-Axis </label>\n                            <label class=\"ui label gray\" onClick={this.handleLabel(\"Y\")}> Y-Axis </label>\n                        </label>\n                       <div class = \"two fields\">\n                           <div class=\"field\">\n                               <div class = \"ui labeled input\">\n                                   <div class = \"ui basic label\">\n                                   [\n                                   </div>\n                                   <input onChange={this.handleInvalidInterval(\"minY\")} type=\"text\" placeholder={this.state.minY} id=\"minY\"\n                                    value={this.state.minY}></input>\n                               </div>\n                           </div>\n                           ,\n                           <div class = \"field\">\n                               <div class = \"ui labeled right input\">\n                                   <input onChange={this.handleInvalidInterval(\"maxY\")}  type=\"text\" placeholder={this.state.maxY} id=\"maxY\"\n                                        value={this.state.maxY}></input>\n                                   <div class = \"ui basic label\">\n                                   ]\n                                   </div>\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n        return ( \n            <div className=\"form\">\n                <Form class = 'ui'>\n                {/* Function Input */}\n                < div class = \"field\">\n                    <label> Function </label> \n                    <div class = \"ui labeled input\">\n                        <div class = \"ui basic label\">\n                        Y = \n                        </div>\n                        <input onChange = {\n                        this.handleFunc\n                        }\n                        type = \"text\"\n                        name = \"first-name\"\n                        placeholder = \"try sin(x) ...\" />\n                    </div>\n                </div> \n                    \n                {/* XY-Axis Input */}\n                {displayAxis}\n                \n                {/* Submit Button  */}\n                <button onClick = {\n                    this.handleClick\n                    }\n                    class = \"ui button\"\n                    type = \"submit\"> Graph </button> \n\n                {/* End */}\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default GraphInput;\n\n","import React from 'react';\n// import { Button, Card, Image, Input, Label, Form } from 'semantic-ui-react'\nimport './GraphInput.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport './ChartButtons.css'\n\nconst ChartButtons = (props) => (\n        <div class=\"ui icon buttons\">\n            <button class=\"ui button\">\n                <i class=\"expand icon\"></i>\n            </button>\n            <button class=\"ui button\">\n                <i class=\"location arrow icon\"></i>\n            </button>\n        </div>\n);\n\nexport default ChartButtons;","import React, {\n    Component\n} from 'react';\n// import {\n//     Button,\n//     Card,\n//     Image,\n//     Input,\n//     Label,\n//     Form,\n//     Container,\n//     Checkbox\n// } from 'semantic-ui-react'\nimport './HistoryEntries.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nclass HistoryEntries extends Component {\n    constructor(props){\n        super(props);\n        this.handleDeleteEntry = this.handleDeleteEntry.bind(this);\n    }\n\n    handleDeleteEntry(){\n        this.props.handleDelete(this.props.obj);\n    }\n\n    render(){\n    return (\n        <div className=\"card-layout ui segment black\"> \n            {/* <div className=\"functionInput\"> */}\n            <div class = \"ui labeled input functionInput\">\n                        <div class = \"ui basic label\">\n                        Y = \n                        </div>\n                        <input \n                        type = \"text\"\n                        name = \"first-name\"\n                        value = {this.props.obj.mathFunc} />\n                        <button class=\"ui icon button\"> <i class=\"save outline icon\"></i></button>\n                    </div>\n            {/* </div> */}\n            <div className=\"button1\">\n            <label> Function </label> \n            </div>\n            <div className=\"button2 basic ui icon buttons\">\n                    <button onClick={this.handleDeleteEntry}class=\"ui button\"> <i class=\"times circle outline icon\"></i></button>\n            </div>\n            {/* <div className=\"function2\"></div> */}\n        </div>\n    )\n    }\n}\n\nexport default HistoryEntries;\n\n// onClick={props.handleDelete(props.obj)}","import React, {\n    PureComponent\n} from 'react';\n// import {\n//     Button,\n//     Card,\n//     Image,\n//     Input,\n//     Label,\n//     Form,\n//     Container,\n//     Select,\n//     Segment\n// } from 'semantic-ui-react'\nimport './History.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport HistoryEntries from './HistoryEntries';\n\nclass History extends PureComponent{\n    constructor(props){\n        super(props);\n        this.myDiv = React.createRef()\n\n    }\n\n    componentDidMount () {\n        console.log(\"HEIIIIIIGHHHHT\" + this.myDiv.current.offsetHeight)\n      }\n\n    render(){\n        const displayList = this.props.historyList.map((obj) => (<HistoryEntries handleDelete={this.props.handleDelete} obj={obj}></HistoryEntries>))\n        return (\n            <React.Fragment>\n            <div ref={this.myDiv} id=\"scrollableDiv\" style={{ height: this.props.historyHeight, overflow: \"auto\" }} className=\"container\"> \n            <InfiniteScroll dataLength=\"10\" scrollableTarget=\"scrollableDiv\">\n                {displayList}\n                {/* <HistoryEntries></HistoryEntries>\n                <HistoryEntries></HistoryEntries>\n                <HistoryEntries></HistoryEntries>\n                <HistoryEntries></HistoryEntries>\n                <HistoryEntries></HistoryEntries>\n                <HistoryEntries></HistoryEntries> */}\n            </InfiniteScroll>\n            </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default History;","let historyHeightCalculator = (initalHeight, currentHeight) => {\n    let heightWindow = window.innerHeight;\n\n    if (initalHeight < heightWindow){\n        return currentHeight * (initalHeight/heightWindow);\n    }\n    return currentHeight * (heightWindow/initalHeight);\n\n}\nexport default historyHeightCalculator;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Graph from './components/Graph'\nimport d3 from \"d3\";\nimport GraphInput from './components/GraphInput'\nimport ChartButtons from './components/ChartButtons';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'semantic-ui-css/semantic.css'\nimport dimensionCalculator from './utilities/dimensionCalculator'\nimport History from './components/History'\nimport historyHeightCalculator from './utilities/historyHeightCalculator'\n\nwindow.d3 = d3;\nlet shortid = require('shortid');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      height: 200, \n      width: 200,\n      mathFunc: \"x^4\",\n      minX: -50,\n      maxX: 50,\n      historyHeight: 0,\n      historyList : [],\n      compareOn : false,\n      compareIds : [],\n      selectedId : null,\n    };\n\n    this.initialScreenWidth = window.innerHeight;\n    this.myDiv = React.createRef()\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.updateList = this.updateList.bind(this);\n    this.changeSelectedId = this.changeSelectedId.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.height);\n    // Additionally I could have just used an arrow function for the binding `this` to the component...\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.updateDimensions();\n  }\n  //obj = {mathFunc: \"\", minX: \"\", maxX: \"\", minY: \"\", maxY: \"\", id: \"\"}\n  updateList(obj){\n    const objWithid = {...obj, id: shortid.generate()};\n    console.log(\"update list called with objwithid = \" + objWithid)\n    this.setState((state,props) => ({\n      historyList: [objWithid,...state.historyList],\n      selectedId: null,\n      compareIds: [objWithid],\n    }),() => this.updateDimensions());\n  }\n\n  changeSelectedId(obj){\n    this.setState({\n        selectedId : obj,\n        compareIds: [obj] \n    });\n  }\n\n  updateDimensions() {\n    this.setState({\n      height: dimensionCalculator().height,\n      width: dimensionCalculator().width,\n      historyHeight: this.state.historyHeight === 0 ? this.myDiv.current.offsetHeight : historyHeightCalculator(this.initialScreenWidth, this.myDiv.current.offsetHeight)\n    });\n  }\n\n  handleDelete(obj){\n    const newList = this.state.historyList.filter(item => item.id !== obj.id);\n    this.setState({\n      historyList: newList,\n    }, () => this.updateDimensions());\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    const graph = this.state.historyList.length > 0 ?  <Graph historyList={this.state.historyList} compareIds={this.state.compareIds}\n    compareOn={this.state.compareOn} width={this.state.width} height={this.state.height} selectedId={this.state.selectedId}></Graph> : null; \n\n    console.log(graph);\n    return (\n      <div  className=\"wrapper\">\n        <div  className=\"wrapper-chart\">\n          <div ref=\"Chart\" classname=\"chart1\"> \n            {/* <Graph  width={this.state.width} height={this.state.height} minX={this.state.minX} maxX={this.state.maxX} mathFunc={this.state.mathFunc}></Graph> */}\n                {/* <Graph historyList={this.state.historyList} compareIds={this.state.compareIds}\n                      compareOn={this.state.compareOn} selectedId={this.state.selectedId}></Graph> */}\n                      {graph}\n          </div>\n          <div className=\"icons-button\"> \n            <ChartButtons></ChartButtons>\n          </div>\n        </div>\n        <div className=\"wrapper-sidebar\">\n          <div className=\"sidebar-input\">\n              <GraphInput updateList={this.updateList}></GraphInput>\n          </div> \n          <div className=\"compare-button\">\n            {/* <button class=\"ui right floated button\"> Some Action</button> */}\n            <div class=\"ui label\">Compare</div>\n          </div>\n          <div ref={this.myDiv} className=\"sidebar-history\">\n              <History handleDelete={this.handleDelete} historyHeight={this.state.historyHeight} historyList={this.state.historyList}></History>\n          </div>\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}